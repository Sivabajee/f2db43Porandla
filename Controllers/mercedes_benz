var mercedes_benz = require('../models/mercedes_benz');
// List of all mercedes_benzs
exports.mercedes_benz_list = function (req, res) {
    res.send('NOT IMPLEMENTED: mercedes_benz list');
};
// for a specific mercedes_benz.
// for a specific mercedes_benz. 
exports.mercedes_benz_detail = async function (req, res) {
    console.log("detail" + req.params.id)
    try {
        result = await mercedes_benz.findById(req.params.id)
        res.send(result)
    } catch (error) {
        res.status(500)
        res.send(`{"error": document for id ${req.params.id} not found`);
    }
};
// Handle mercedes_benz create on POST.
exports.mercedes_benz_create_post = function (req, res) {
    res.send('NOT IMPLEMENTED: mercedes_benz create POST');
};
// Handle mercedes_benz delete on DELETE. 
exports.mercedes_benz_delete = async function(req, res) { 
    console.log("delete "  + req.params.id) 
    try { 
        result = await mercedes_benz.findByIdAndDelete( req.params.id) 
        console.log("Removed " + result) 
        res.send(result) 
    } catch (err) { 
        res.status(500) 
        res.send(`{"error": Error deleting ${err}}`); 
    } 
}; 
// Handle mercedes_benz update form on PUT.
exports.mercedes_benz_update_put = function (req, res) {
    res.send('NOT IMPLEMENTED: mercedes_benz update PUT' + req.params.id);
};
// VIEWS

// List of all mercedes_benzs
exports.mercedes_benz_list = async function (req, res) {
    try {
        themercedes_benz = await mercedes_benz.find();
        res.send(themercedes_benz);
    }
    catch (err) {
        res.status(500);
        res.send(`{"error": ${err}}`);
    }
};
// VIEWS
// Handle a show all view
exports.mercedes_benz_view_all_Page = async function (req, res) {
    try {
        themercedes_benz = await mercedes_benz.find();
        res.render('mercedes_benz', { title: 'mercedes_benz Search Results', results: themercedes_benz });
    }
    catch (err) {
        res.status(500);
        res.send(`{"error": ${err}}`);
    }
};
// Handle mercedes_benz create on POST.
exports.mercedes_benz_create_post = async function (req, res) {
    console.log(req.body)
    let document = new mercedes_benz();
    // We are looking for a body, since POST does not have query parameters.
    // Even though bodies can be in many different formats, we will be picky
    // and require that it be a json object
    // {"mercedes_benz_type":"goat", "cost":12, "size":"large"}
    document.mercedes_benz_luxurious_name = req.body.mercedes_benz_luxurious_name;
    document.mercedes_benz_tire_size = req.body.mercedes_benz_tire_size;
    document.mercedes_benz_High_Beam_type = req.body.mercedes_benz_High_Beam_type;
    try {
        let result = await document.save();
        res.send(result);
    }
    catch (err) {
        res.status(500);
        res.send(`{"error": ${err}}`);
    }
}
// Handle mercedes_benz update form on PUT. 
exports.mercedes_benz_update_put = async function (req, res) {
    console.log(`update on id ${req.params.id} with body 
${JSON.stringify(req.body)}`)
    try {
        let toUpdate = await mercedes_benz.findById(req.params.id)
        // Do updates of properties 
        if (req.body.mercedes_benz_luxurious_name) toUpdate.mercedes_benz_luxurious_name = req.body.mercedes_benz_luxurious_name;
        if (req.body.mercedes_benz_tire_size) toUpdate.mercedes_benz_tire_size = req.body.mercedes_benz_tire_size;
        if (req.body.mercedes_benz_High_Beam_type) toUpdate.mercedes_benz_High_Beam_type = req.body.mercedes_benz_High_Beam_type;
        let result = await toUpdate.save();
        console.log("Sucess " + result)
        res.send(result)
    } catch (err) {
        res.status(500)
        res.send(`{"error": ${err}: Update for id ${req.params.id} 
failed`);
    }
}; 

 // Handle a show one view with id specified by query 
 exports.mercedes_benz_view_one_Page = async function(req, res) { 
    console.log("single view for id "  + req.query.id) 
    try{ 
        result = await mercedes_benz.findById( req.query.id) 
        res.render('mercedes_benzdetail',  
{ title: 'mercedes_benz Detail', toShow: result }); 
    } 
    catch(err){ 
        res.status(500) 
        res.send(`{'error': '${err}'}`); 
    } 
};